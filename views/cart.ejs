<%- include('./partials/header') %>

<div class="container mx-auto mt-20 px-4 sm:px-6 flex flex-col md:flex-row gap-6">
    <% if (user.cart && user.cart.length > 0) { %>
        <!-- Left Side: Cart Products -->
        <div class="md:w-2/3 bg-white shadow-lg rounded-lg p-6">
            <h2 class="text-2xl font-bold mb-4">Shopping Cart</h2>
            <% user.cart.forEach(function(item) { %>
                <% if (item.product) { %>
                    <div class="flex items-center bg-gray-100 shadow-md rounded-lg overflow-hidden p-5 mb-5">
                        <!-- Product Image -->
                        <div class="w-1/4 flex justify-center items-center p-3 bg-[<%= item.product.bgcolor %>]">
                            <img class="h-36 sm:h-40 object-contain" src="data:image/jpeg;base64,<%= item.product.image ? item.product.image.toString('base64') : '' %>" alt="<%= item.product.name || 'No Name' %>">
                        </div>
                        
                        <!-- Product Details -->
                        <div class="w-3/4 p-5 flex flex-col">
                            <div class="flex justify-between items-center mb-3">
                                <h3 class="text-lg sm:text-xl font-semibold"><%= item.product.name %></h3>
                                <!-- Quantity Buttons -->
                                <div class="flex items-center space-x-3">
                                    <a href="/increase/<%=user._id%>/<%=item._id%>" class="increase-btn bg-blue-600 text-white px-3 py-1 rounded-full hover:bg-blue-500 transition">+</a>
                                    <span class="px-4 py-2 rounded-lg bg-gray-200 font-semibold"> <%= item.quantity %> </span>
                                    <a href="/decrease/<%=user._id%>/<%=item._id%>" class="decrease-btn bg-red-600 text-white px-3 py-1 rounded-full hover:bg-red-500 transition">-</a>
                                </div>
                            </div>
                            <div class="text-sm sm:text-base space-y-1">
                                <p class="text-gray-700">Price: <span class="font-semibold">₹<%= item.product.price %></span></p>
                                <p class="text-green-600">Discount: <span class="font-semibold">₹<%= item.product.discount %></span></p>
                                <p class="text-gray-800 font-bold text-lg">Total: ₹
                                    <span class="total-amount" data-amount="<%= (Number(item.product.price) - Number(item.product.discount)) * item.quantity %>">
                                        <%= (Number(item.product.price) - Number(item.product.discount)) * item.quantity %>
                                    </span>
                                </p>
                            </div>
                        </div>
                    </div>
                <% } %>
            <% }); %>
        </div>

        <!-- Right Side: Cart Summary & Payment Button -->
        <div class="md:w-1/3 bg-white shadow-lg rounded-lg p-6 h-fit">
            <h4 class="text-xl font-semibold border-b pb-3 mb-4">Order Summary</h4>
            <div class="text-lg space-y-2 mb-4">
                <p class="flex justify-between">Subtotal: <span class="font-semibold">₹<span id="subTotal">0</span></span></p>
                <p class="flex justify-between text-green-600">Delivery Fee: <span class="font-semibold">₹20</span></p>
                <hr>
                <p class="flex justify-between font-bold text-xl">Total: <span class="text-green-600">₹<span id="totalAmount">0</span></span></p>
            </div>
            <button id="payButton" class="w-full bg-green-500 text-white px-6 py-3 rounded-full text-lg font-semibold hover:bg-green-600 transition">Pay Now</button>
        </div>
    <% } else { %>
        <p class="text-center text-gray-500 text-lg w-full">Your cart is empty.</p>
    <% } %>
</div>

<%- include('./partials/footer') %>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        function updateTotal() {
            let subTotal = 0;
            document.querySelectorAll(".total-amount").forEach(el => {
                let amount = parseFloat(el.getAttribute("data-amount")) || 0;
                subTotal += amount;
            });

            let deliveryFee = 20;
            let totalAmount = subTotal > 0 ? subTotal + deliveryFee : 0;

            document.querySelector("#subTotal").textContent = subTotal.toFixed(2);
            document.querySelector("#totalAmount").textContent = totalAmount.toFixed(2);
        }

        document.querySelectorAll(".increase-btn, .decrease-btn").forEach(button => {
            button.addEventListener("click", () => {
                setTimeout(updateTotal, 500);
            });
        });

        updateTotal();

        document.getElementById("payButton").addEventListener("click", async function () {
            try {
                let amount = parseFloat(document.getElementById("totalAmount").textContent);

                if (isNaN(amount) || amount <= 0) {
                    alert("Invalid order amount. Please add items to the cart.");
                    return;
                }

                const response = await fetch("/createOrder", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ amount: Math.round(amount) })
                });

                const order = await response.json();

                if (!order.success || !order.order_id || !order.amount || !order.key_id) {
                    alert(order.message || "Failed to create order. Try again.");
                    return;
                }

                if (typeof Razorpay === "undefined") {
                    alert("Payment gateway not loaded. Please refresh and try again.");
                    return;
                }

                const options = {
                    key: order.key_id,
                    amount: order.amount,
                    currency: "INR",
                    name: "Bag Shop",
                    description: "Order Payment",
                    order_id: order.order_id,
                    handler: async function (response) {
                        const verifyResponse = await fetch("/verifyOrder", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                order_id: order.order_id,
                                payment_id: response.razorpay_payment_id,
                                signature: response.razorpay_signature
                            })
                        });

                        const verifyResult = await verifyResponse.json();
                        if (verifyResult.success) {
                            window.location.href = `/order-success?order_id=${order.order_id}&payment_id=${response.razorpay_payment_id}`;
                        } else {
                            alert("Payment Verification Failed.");
                        }
                    },
                    prefill: {
                        name: "Customer",
                        email: "customer@example.com"
                    },
                    theme: { color: "#3399cc" }
                };

                const rzp = new Razorpay(options);
                rzp.on("payment.failed", response => {
                    alert("Payment Failed: " + response.error.description);
                });

                rzp.open();
            } catch (error) {
                console.error("Error:", error);
                alert("Something went wrong. Please try again.");
            }
        });
    });
</script>
